//pro 1 Create Object with Constructor Function

// constructor function
function Person () {
    this.name = 'John',
    this.age = 23
}

// create an object
const person = new Person();

//pro 2 Create Multiple Objects with Constructor Function

// constructor function
function Person () {
    this.name = 'John',
    this.age = 23,

     this.greet = function () {
        console.log('hello');
    }
}

// create objects
const person1 = new Person();
const person2 = new Person();

// access properties
console.log(person1.name);  // John
console.log(person2.name);  // John

//pro 3 JavaScript this Keyword

// constructor function
function Person () {
    this.name = 'John',
}

// create object
const person1 = new Person();

// access properties
console.log(person1.name);  // John

//pro 4 JavaScript Constructor Function Parameters

// constructor function
function Person (person_name, person_age, person_gender) {

    // assigning  parameter values to the calling object
     this.name = person_name,
     this.age = person_age,
     this.gender = person_gender,
 
     this.greet = function () {
         return ('Hi' + ' ' + this.name);
     }
 }
 
 
 // creating objects
 const person1 = new Person('John', 23, 'male');
 const person2 = new Person('Sam', 25, 'female');
 
 // accessing properties
 console.log(person1.name); // "John"
 console.log(person2.name); // "Sam"

 //pro5 JavaScript Built-in Constructors

 let a = new Object();    // A new Object object
let b = new String();    // A new String object
let c = new Number();    // A new Number object
let d = new Boolean();   // A new Boolean object

const name = new String ('John');
console.log(name); // "John"

const number = new Number (57);
console.log(number); // 57

const count = new Boolean(true);
console.log(count); // true