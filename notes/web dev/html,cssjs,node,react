
pls follow this tutorial only if u know the basics of web developement

HTML_______________

any text editor can be used for us we use vscode
others are same and u know 

    <hr> - used to draw a _________________________________________________________________________ line

    <!-- this is used for comment -->

    <div>this is used to divide a page section</div>

to get the input u can use 

    <input type="<enter the type of the input u want text,password,date,email,range,file,checkbox,radiobutton,submit etc ...>" value="<enter the default value here>"
to define a rafio button

    <input name="<enter the same name to have a single choice>" type="radio">

to get huge paragraph inputs use text area tag

    <textarea rows="<number of words>" cols="<number of lines>"> "<put your default text here>" </textarea>

to check all. types of input see this page

    https://www.w3schools.com/html/html_form_input_types.asp

forms in html

    https://www.w3schools.com/html/html_forms.asp

if you want to display a website inside another website then use iframe

    <iframe src="<enter the url>" height="<enter the height in numbers and collen>" width="<enter as given in height>">"<enter here the message to be displayed when the website is not displayed>"</iframe>


you can add the image usint this tag

    <img src=”(your image URL here or the file name)”>

other image manuplation see this //DONT FORGET TO SEETHE " AND ”

    https://www.tutorialspoint.com/html/html_images.htm#:~:text=You%20can%20insert%20any%20image,syntax%20to%20use%20this%20tag.&text=The%20tag%20is%20an,it%20has%20no%20closing%20tag.




CSS________________

before appling the css just finish the HTML code

this is a styling language used to style

first u have to create a link from html to trhe css file by link tag

    <link rel="stylesheet" type="text/css" herf="<enter the location of the file>">
    //this should be in the title tag
    //dont forget to add ./"for current directory" and ../ previous directory

then test ur connection by just changing the back ground color

    in the css

        body{
             background: red;
            }

few gradient example

    https://www.w3schools.com/css/css3_gradients.asp

    https://cssgradient.io/     //gradent generator

three types of selection 

    1)using the elementy tag 

        eg in  html file

            <p>hello there</p>
        
        eg in css file 

            p{
                color:red;
            }

    2)using class selector

        eg in html file

            <p class="<class name>">hello there</p>
           
            eg

                <p class="class1">hello theer</p>

        eg in css file

            .class1{
                color:blue:
            }

    3)using the inside

        eg in html file

            <p id="sometext">hellow there</p>

        eg in css file

            #sometext{
                color:blue;
            }

to scale the image and videos accordingly use this 

    https://www.codegrepper.com/code-examples/css/how+to+make+an+image+scale+with+window+size+css

the power of different selector class is given in this order

    element tag < class tag < id tag < in line change

psudo selector example

    <selector tag>:<action>{
        chnages to be made 
    }

    eg
        h1:hover{
            color:red;
        }

        //this is used when we hover the mouse over that line

        li:first-child <or> last-child <or> nth-child(<put the nuber of the child which u want to change>) <or> only-child{
            color:blue;
        }

        //the only-child only works on the lsit having only one child

        a:link{
            color:red; // tis will work on hyper link before visting
        }

        a:visited{
            color:blue; // tis will work on hyper link after visting
        }
 
you can comment the css by /*comment*/

special tags eg

    h2 + a{
        //changes to be made and here the changes will be implemented in the "a" tag which is after h2 tag parent tag independent
    }

    textarea ~ button{
        //changes to be made and here the changes will be implemented in the "button" tag which is after textarea tag works under the same parent tag
    }
    
    ul > li {
        //changes will be made to the li tags inside the ul if any other tagis there the effect will not be applied
        //this is only applicable when ul is child of li not nested list
    }

    ul li{
         //changes will be made to the li tags inside the ul if any other tagis there the effect will not be applied
        //this is applicable when ul is child of li even nested list
    }

attribute selectors

    h2[class="class value"]{
        //the changes is applied only in the h2 tags where the class value is mention above
    }

    img[src="image location"]{
        //put the style u wana applie
    }

    img[src^="half location"]{
        //the ^ is used to select the mutiple source which is containg the part of the location 
        //eg /img/ and u want to select all img under the /img/ then use it
    }

    img[src$="half location"]{
        //the $ is used to select the mutiple source which ends the part of the location 
        //eg /img/ and u want to select all img ends with /img/ then use it
    }

    img[src*="half location"]{
        //the * is used to select the all source which is containg the part of the location 
        //eg /img/ and u want to select all img under the /img/ then use it
    }

you can change the font color by just adding the property color in the css

    body{
        color: blue;
        //this is used for font color
    }

you can set background image by urls or local files also use url

    background: url("provide the local or the url to the img");
    //works in css
    //but the images will get repeted

    //ucan over come the repeting problem by this
    background-repeat: no-repeat;
    //note: this will not repeat but size will be the original size

    //you can avoid it by this command
    background-size:cover;

you can control the font size like this

    fontsize:1cm;
    fontsize:1m;

u can control the text decoration 

    text-decoration:none;
    //remove all decoration
    text-decoration:underline;
    //underline
    text-decoration:line-through;
    //strick the words
    text-decoration:overline;
    //overline

yopu can control the case of the fonts with this

    text-transform:upercase;
                  :lowercase;
                  :capitalize;

you can change the text anlinement

    text-align:left;
              :right;
              :center;
              :justify;

you can change the font tickness by changing

    font-weight: 400;

you can change the font style

    font-style:italic;
              :oblique;
              :bold;

if u want to change the font family or style see this

    https://www.w3schools.com/css/css_font.asp

if u want to check the view of the website in the different devices using
inspect in ur browser and eresponsive can change the real size

you can add the borderd to your content 

    https://www.w3schools.com/css/css_border.asp

padding is inside the border and the margin is outside the border

you can just like that add and create the pading and the marjin

    margin:20px;
    padding:20px;

you can add the padding based ont the directions also like

    padding-left:20px;
    padding-right:20px;
    padding-bottom:20px;
    padding-top:20px;

    (or)

    padding: top right bottom left ;
    padding: 20px 40px 30px 0;

    //same for margin

float is used to set how a element shhould posses in  a page\
eg a image should be moved to right but text should take its place then use 
float

    float:position;
    float:right;
    float:left;
    up 
    bottom etc 

you can hide things for temprovary time using display 
and u can use javascript to do some crazy stuff

display 

    display:none;
    //hides that element

    display:inline; //puts in same line 
    display:inline-block; //put in the bottom line

css-flex box _________________________________________________________________________

    https://www.w3schools.com/cssref/css3_pr_flex.asp

css-grid _____________________________________________________________________________

    https://www.w3schools.com/css/css_grid.asp

if scrolling is not enabled by default put this

    overflow:auto;



    


js + node + react ------------------------------------------------------------------------
vid : 

install node js lts

simple commands are 

    console.log("hello world"); //this prints

every thing is as same as the javascript like

    const sum = (num1,num2) => num1 + num2; // function declaration
    //this is need to export to run eg

    //sum.js file
    const sumfun = (num1,num2) => num1 + num2;
    module.export.sumfun = sumfun; // this exports the function
    // to export multiple objects use this
    module.export = {sum : sum, obj2 : obj2, obj3 : obj3}

    //app.js file
    const sum = require('./sum'); //this imports the local files
    console.log(sum); // lists all of the avalible fuctions and exported variables
    console.log(sum.sumfun(1,1)); //exicutes the function 
    // even multiple objects can be ecported  


//pro 1 Create Object with Constructor Function

// constructor function
function Person () {
  this.name = 'John',
  this.age = 23
}

// create an object
const person = new Person();

//pro 2 Create Multiple Objects with Constructor Function

// constructor function
function Person () {
  this.name = 'John',
  this.age = 23,

   this.greet = function () {
      console.log('hello');
  }
}

// create objects
const person1 = new Person();
const person2 = new Person();

// access properties
console.log(person1.name);  // John
console.log(person2.name);  // John

//pro 3 JavaScript this Keyword

// constructor function
function Person () {
  this.name = 'John',
}

// create object
const person1 = new Person();

// access properties
console.log(person1.name);  // John

//pro 4 JavaScript Constructor Function Parameters

// constructor function
function Person (person_name, person_age, person_gender) {

  // assigning  parameter values to the calling object
   this.name = person_name,
   this.age = person_age,
   this.gender = person_gender,

   this.greet = function () {
       return ('Hi' + ' ' + this.name);
   }
}


// creating objects
const person1 = new Person('John', 23, 'male');
const person2 = new Person('Sam', 25, 'female');

// accessing properties
console.log(person1.name); // "John"
console.log(person2.name); // "Sam"

//pro5 JavaScript Built-in Constructors

let a = new Object();    // A new Object object
let b = new String();    // A new String object
let c = new Number();    // A new Number object
let d = new Boolean();   // A new Boolean object

const name = new String ('John');
console.log(name); // "John"

const number = new Number (57);
console.log(number); // 57

const count = new Boolean(true);
console.log(count); // true


install node

and install windows tools in npm

use #npx create-react-app app-name(location)

eg: npx create-react-app . // to create in current dir

    npx create-react-app reactapp


note if u are running windows pls use the powershell as native avoid vscode terminal

go to src folder remove all un nessary code and files leaving index.js and app.js and the content should be like 

index.js:

import React from "react";

function App() {
  return null
}

export default App;

app.js:

import React from "react";

function App() {
  return (
    <todolist />
  )
}

export default App;

install es7 react/redux/graph...... in vs code extentions

to create new functions u can have a react closed html tag 

eg in app.js:

import React from "react";

function App() {
  return (
    <todolist />
  )
}

export default App;


then create a new folder called todolist.js

then type rfc in the Todolist.js this lanch a template for function like this :

//note the template name and file name should start with caps else it will not recoginse

import React from 'react'

export default function Todolist() {
  return (
    <div>
      
    </div>
  )
}

then import the file in app.js eg :import Todolist from "./Todolist";

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

state
------

the react state gives the state of the program it can be used to append the data that was provided previously like u can call the elements from the database and give it Headers

useState-
____________

use state is a react componet used to update the variable value that reflect real time in the webpage which is not possible by the traditional methods

first u need to import hte react library

syntax:

import {useState} from react

const [variable,setvariable] = useState(say the default state);

eg:

import {useState} from react

const [variable,setvariable] = useState(""); //make sure the one is variable and another one is a "set" followed by the variable name to set the value of the variable
//or
const [variable,setvariable] = useState({});
//or
const [variable,setvariable] = useState("fruit");

//to change the value use setvariable

setvariable("some value")




What Does "(e)" Mean in JavaScript? - Event Handler Object Explained-

e is the object that contains the information about anm event that has recently occured

events like 

file upload 
click 
etc...

for all events and its properties check out - https://developer.mozilla.org/en-US/docs/Web/API/Event





Event.preventDefault()
The preventDefault() method of the Event interface tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be.

The event continues to propagate as usual, unless one of its event listeners calls stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at once.

As noted below, calling preventDefault() for a non-cancelable event, such as one dispatched via EventTarget.dispatchEvent(), without specifying cancelable: true has no effect.

Syntax
event.preventDefault()
Copy to Clipboard
Examples
Blocking default click handling
Toggling a checkbox is the default action of clicking on a checkbox. This example demonstrates how to prevent that from happening:

JavaScript
const checkbox = document.querySelector("#id-checkbox");

checkbox.addEventListener("click", checkboxClick, false);

function checkboxClick(event) {
  let warn = "preventDefault() won't let you check this!<br>";
  document.getElementById("output-box").innerHTML += warn;
  event.preventDefault();
}
Copy to Clipboard
HTML
<p>Please click on the checkbox control.</p>

<form>
  <label for="id-checkbox">Checkbox:</label>
  <input type="checkbox" id="id-checkbox" />
</form>

<div id="output-box"></div>

Result:

Please click on the checkbox control.

Checkbox: ▢
preventDefault() won't let you check this!
preventDefault() won't let you check this!
preventDefault() won't let you check this!






The Problem
You may have come across JSX code in React like this snippet:

<Image {...aspects} source="img_source">
And wondered what these three dots ... are and what they do.

The Solution
These three dots are called the spread syntax or spread operator. The spread syntax is a feature of ES6, and it’s also used in React.

Spread syntax allows you to deconstruct an array or object into separate variables. Even though the syntax doesn’t look particularly meaningful when you first encounter it, spread syntax is super useful.

According to MDN:

Spread syntax (...) allows an iterable such as an array expression or string to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected, or an object expression to be expanded in places where zero or more key-value pairs (for object literals) are expected.

This means is that you can use the array syntax in function calls, in array literals, and in object literals.

In React, you can use spread syntax to pass objects such as props without the need to pass individual values.

For example, these three components are equal:

function App1() {
  return <Image width="50" height="100" source="img_source" />;
}

function App2() {
  const props = { width: "50", height: "100" };
  return (
    <Image width={props.width} height={props.height} source="img_source" />
  );
}

function App3() {
  const props = { width: "50", height: "100" };
  return <Image {...props} source="img_source" />;
}
This syntax is particularly useful when you want to pass a dynamic object and do not know beforehand which properties might be present in it.

Another popular use case of spread syntax is to copy objects or arrays. Spread operator can create a new object or array with all of the properties or elements of the existing object or array.

For example:

const books = [
  { name: "War and Peace", read: true },
  { name: "Count of Monte Christo", read: true },
];

function addNewBook(newBook) {
  return [...books, { ...newBook, read: false }];
}

const updatedBookList = addNewBook({ name: "Lord of the Rings" });
In React, this comes in handy when you do not want to mutate specific data like state.






react hooks-
___________________

react hooks are used to dynamically change the contents of the webpage

the hook should always run

useState-
_____________

this is used for changing the variable value dynamically on the webpage without loading each time the value is updatedBookList

this uses 2 keywords that u can name any but the function part or the 2nd keyword should start with set for easy access and dont forget to add a capword after Set use camel case

syntax:

const [variable,setVariable] = useState(default value)

eg:

const [name,setName] = useState("jhon nicolis")

or

const [name,setName] = useState("")


to update the new value 

syntax

setVariable(value)

eg:

setName("baba durabai")

in useState dont pass the function directly it will run every time u change the state of the variable

eg:wrong method

const [name,setName] = useState(func())

the func will ran every time u change the state of the variable

correct method=>

const [name,setName] = useState(() => func())

this is a function calling the func it will be ran only once the state is declared

the useState does overwrite the whole data so if u pass it in the list and only want to change one element of that list or dictonary do use "..." so that it accesss the internal componunts 

eg:


setName({count:1,name:"kaja"})

if now we wana change the state only of the count then 

if u want to call the value morwe than twice in a program to change its value dont use the actuall variable 

eg:name here dont use it 

setName("kalim")
setName("margarit")

it will work only once to avoid it use the previous state method each state variable has a previous state variable
to access it use the "prev" followed by variable name and the first letter of the variable should be in caps

eg:

wrong way:

setName(count-1)

crt way:

setName(prevCount => prevCount-1 )


if u are using list inside the state do use "..." to access it else whole thing will be over written

more on use state --- https://www.youtube.com/watch?v=O6P86uwfdR0&list=PLZlA0Gpn_vH8EtggFGERCwMY5u5hOjf-h
                  --- https://blog.webdevsimplified.com/2020-04/use-state/








useEffect hook-
__________________

the a use effect hook is used when the usestate is rendered 

this is like side effect of the usestate 

when ever the web page is rendered the use effect is also active

u can also metion the change on the particular resource type which is given in the use state

syntax:

import { useState,useEffect } from 'react'

app(){
    const [anyvariable,setAnyvariable] = useState('chaud')
    const [useeffectvar,setUseeffectvar] = useState('mc stan')

    setAnyvariable("anyvalue change")
    setUseeffectvar("change any")


    //method 1 it runs on same state change also io. last == now value 

    useEffect(() => {
        console.log("use state is used")
    })

    //on change of the useEffectvar method 2

    useEffect(() => {
        console.log("use state is useeffect var is change")
    },[useeffectvar]) //this will automatically generate on the render of useEffectvar

    //method 3 on mount this runs when the web page is a loaded

    useEffect(() => {
        console.log("use state is useeffect var is change")
    },[])

    //this can also reder when u resize the window and u can listent to the mouse cyursor window width etc

    //METHOD 4 THIS is when any one of the state is triggered

    useEffect(() => {
        console.log("use state is useeffect var is change")
    },[useeffectvar,anyvariable])
}


more on use effect - https://www.youtube.com/watch?v=0ZJgIjIuY7U&list=PLZlA0Gpn_vH8EtggFGERCwMY5u5hOjf-h&index=3











for more go refer https://www.youtube.com/watch?v=hQAHSlTtcmY and https://radixweb.com/blog/steps-to-build-react-project-with-create-react-app

last seen - 13:00 - https://www.youtube.com/watch?v=hQAHSlTtcmY

