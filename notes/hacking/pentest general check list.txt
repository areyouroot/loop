
PenTesting Complete Plan and Tools

Author: Abdul Faheem

Note:

what ever mentioned here are temporary, everything might be modified and re-planed according to the requirement and the technology changes.

Every time while Doing pen-testing make sure that screen recorded is enabled.

Goal:

•	To ensure that we make our Enterprise and products secure and gain trust of our clients.
•	To create awareness among the employees related to security and attacks.
•	To make sure that our system is not compromised, if it is then take required actions to resolve it.

Complete plan:

there are few steps and guidelines that we need to incorporate in the work cycle to ensure the security.

Optional requirement: follow DEVSECOPS software development life cycle in development.

Chapter 1: The Prevention

Prevention is better than cure, here we are going to see the steps to prevent the security breaches and few safe development practices.

Social Defense:

•	the first target of any hacker is the humans, we should have a session once in every 3 months related to the current attacks and how to identify or prevent them
•	this should consist of spreading awareness regarding the social engineering attacks and test them with different attacks without their knowledge.
•	To check or make aware that their personal computing devices and other properties like phone or laptops don’t have anything that can make out company vulnerable

eg: handwritten passwords, teams installed in their personal mobile that have some sensitive content like code or sensitive data.

•	And tell them to avoid any public networks that is untrusted.
•	Establishing a regular update routine and to perform look up in https://haveibeenpwned.com/
•	https://checkip.kaspersky.com/
•	https://capturelabs.sonicwall.com/m/feature/ip-reputation-lookup/

Assert Defense & Data Defense:

•	We should make sure that all have installed antivirus software and configured firewall properly and there is no unwanted software or cracked version is not installed.
•	We should not give them admin privilege if its not necessary, make sure that no one has admin rights.
•	We should make sure that the cloud credentials like ssh keys or any other private keys are not stored in local machine
•	we should make sure that we have our own local network to avoid the network traffic leak.
•	We should have strict software development security guidelines like after every build before the code is push to dev branch we should run the CTs and other Test with Binary scanning and code scanning, also In nightly build after everything is successful and a alert to be sent to the Pen-tester so he/she can start testing and try to send the completed build with the changes made so that we shouldn't have to test the product from scratch.
•	always have an offline backup of current stable version (Main).
•	Every critical data that is stored in the db should be sent/retrived and stored after encryption.
•	turn on auditing for azure database so that all changes will be visible.
•	enable azure threat detection in azure to detect security issues.
•	Set log alerts in the azure monitor.
•	enable azure defender for the storage accounts.
•	use soft deletes so that if the code change is required then we can recover it.
•	Use time limit or Sas (shared access signatures).
•	enforce multifactor authentication and complex passwords and avoid the re-usage of passwords.
•	Use the virtual machines just in time and turn off as you are done
•	lock down the administrative ports in all pc especially server and restrict access to RDP,SSH,SCP etc …
•	use firewall and network security groups.
•	do check the security roles and the access control azure RBAC (role based access control)

Chapter 2: The Attack

Pentesting:

A penetration testing, colloquially known as a pentest or ethical hacking, is an authorized simulated cyberattack on a computer system, performed to evaluate the security of the system.

Step 1 Infomation Gathering :

there are 2 information gathering routine

1.	Daily security updates

this is a daily routine where the I spend at least 30min gathering the regular security news and updates related to our product.

The sources:

Bat script 

start firefox www.twitter.com
start firefox www.youtube.com
start firefox www.facebook.com
start firefox www.quora.com
start firefox www.instagram.com
start firefox https://www.google.com/search?q=latest+hacking+news
start firefox https://www.google.com/search?q=latest+finance+news
start firefox https://www.google.com/search?q=news
C:\Users\abdul\AppData\Local\Discord\app-1.0.9016\Discord.exe
start firefox https://www.infosecurity-magazine.com/
start firefox www.github.com
start firefox www.gitlab.com
start firefox www.thehackernews.com
start firefox https://www.cybersecurity-insiders.com/
start firefox https://www.lastwatchdog.com/
start firefox https://cyware.com/cyber-security-news-articles
start firefox www.linkedin.com
start firefox https://www.hackerone.com/press
start firefox https://www.bugcrowd.com/blog/
start firefox https://blog.intigriti.com
start firefox https://www.synack.com/blog/
start firefox https://portswigger.net/blog
start firefox www.gmail.com
start firefox www.binance.com/en/feed
start firefox www.polygon.technology/blog
start firefox www.reddit.com
"C:\Users\abdul\AppData\Roaming\Telegram Desktop\Telegram.exe"


if there is any critical update its better to mail every employee, like security updates related to OS etc..and check is there any data leaked from the organization and if yes analyzing how to recover it and finding the root cause.

Checking the config files and other static dependencies like dlls etc

checking of the content security policies

checking the pre existing check list based on the information gathered 


Eg:databreaches

2.	Pentesting information gathering (Recon)

this is a process of collecting the information related to the product and scope ( which part of the software to be tested ) where we need to test the security etc ...

here things like vulnerability scanning ,code scanning, binary scanning will take place.

In this stage information will be gathered, basic information like which technology is used here and what vulnerabilities does that technology or framework has, is there any detail leaked or zero day attack available.Is there any ignored process is running etc…..



types

1.	Passive Infog.

Here we gather the information from the external sources like google listening to the network traffic etc..

•	Establishing a regular update routine and to perform look up in https://haveibeenpwned.com/
•	https://checkip.kaspersky.com/
•	https://capturelabs.sonicwall.com/m/feature/ip-reputation-lookup/

Csp evaluator

https://csp-evaluator.withgoogle.com/
https://observatory.mozilla.org/
•	https://cspvalidator.org/#url=https://cspvalidator.org/

ssl evaluator

https://www.ssllabs.com/ssltest/
•	https://cryptcheck.fr/

the ssl config generator
 
•	https://ssl-config.mozilla.org/

angular sanitizer

https://vulnerabledoma.in/ngSanitize1.6.8_bypass.html

headers scan

https://securityheaders.com/

other scanner

https://observatory.mozilla.org/
•	https://securityheaders.com/
•	https://www.serpworx.com/check-security-headers



2.	Active Infog.

Here we gather information by interacting with the product like api traffic capture, network scanning etc…

Do some curl so that we get some post details like the hyyp header etc ..
Eg: curl -I -X url

curl the home ur and finding the types of requests allowed and usage of a cheet sheet so that we can find many things

information and check list for cookies and try uploading the poly gots for the session

3.	Research and attack:

once the vulnerability is detected, we will try to attack it and note the steps to replicate it and analysis the level of risk it can cause.

Removal of unused code and remove the zombie or shadow or dead apis - https://www.cybersecurity-insiders.com/shadow-apis-and-zombie-apis-are-common-in-every-organizations-growing-api-attack-surface-data-theorem/

Eg: owasp top 10 etc...

levels of risk:

1.	Critical

the vulnerability that can bring the system down or cause the company a huge loss.

It reduce the trust of the client, These types of vulnerability should be resolved quickly.

eg:

attacks that can span an admin shell or run a backdoor or establishment of the reverse shell or remote code execution ,buffer overflow etc…..

2.	High

the vulnerability that can cause data leak or impersonate user which is limited to product alone not and doesn't have any system level access like shell operations etc...

eg: SQL injection, API bleeding, dos, ddos etc….

3.	Medium

the vulnerability that can affect only the client or steal a specific information or execute a request, this might not have impact on the system or entire user base but it can have huge impact on an individual.

Eg:
session hijacking
XSS attack
Cookie stealer etc…….

4.	Low

the vulnerabilities that can dump some information related to the system like the version of the server which is currently running, they cannot be exploited but it can be useful to plan further attacks

eg:
error pages that show the critical details like version of server running ,firewall details etc…

Chapter 3: The Cure and recovery

1.	Report and Document:

here we write the steps to reproduce the attack, document questions like why and where the vulnerability exist and is there any possible quick fix without any code change etc and risk level and fix duration

2.	Quick fix and suggestions:

if the vulnerability needs a code change, the recommended code change is given and also a suggestions to avoid it in future.

3.	Analyzing whether the system is compromised and Zeroday Attacks:

Note: this step will be followed only when the vulnerability is critical or the system is already compromised.

In case of critical vulnerability quick code fix and patch will be provided

in case of incident reported like the system is compromised at any level. these steps will be followed and a quick fix that can prevent the further data leak or shell connectivity to occur, steps like close all unwanted connections will be taken in action.

restoration of the older version until the fix is done.

Finding the source of attack and the modifications that have been done by the attacker using all log files.

Revert the modifications using the backup or logs and cross check the state.

Take legal action with available proof.

Chapter 4:Extensions

1.	Additional:

we can have programs like bug bounty and other loyalty hack programs so that we can find some vulnerability out of the box. (optional)

Total tools required:

•	Kali Linux or costume Linux distro – OS to test everything away from the host pc
•	WSL - The Windows Subsystem for Linux (WSL) to run the tools which only supports linux
•	Hyper-v or docker – hypervisor or container used for running the virtual machine or container so that it will be easy to test.
•	

Recon:

•	google – to browse information
•	FireFox browser – web browser that can used with owasp tools
•	Google Chrome – vulnerable browser to check attacks
•	nmap – used to gather information related to the network like open ports and services running
•	shodan – google for the hardware
•	Tor browser [free open source] or vpn service [paid] - to access the restricted websites on our network such as exploitdb etc. these websites are blocked and listed as hacking and also to test the attacks like session hijacking etc as a anonymous users so that I don’t need a extra pc
•	maltego community edition (optional) or hubstream product[investigation model] – used for linking all the information gathering details
•	skipfish tool – application security recon tool - https://github.com/spinkham/skipfish
•	nikto or nessus or openvas etc…. – web vulnerablity scanner with rapid scanning
•	gobuster or disbuster or dirb – this is used to find the hidden sub directories that can be vulnerable`
•	recon-ng and the Harvester - to do recon both active and passive.`
•	builtwith or wappilizer – to ge
•	WireShark - Wireshark is a free and open-source packet analyzer. It is used for network troubleshooting, analysis, software and communications protocol development, and education.

Static analysis:

•	Deva sir will tell soon the list has been sent for both binary scanning and code scanning

Attacking:

•	OWASP Zap and OWASP Penetration Testing Kit – a web vulnerability scanner and web attack proxy
•	SqlMap – used to enumerate Sql DB
•	Metasploit – used to attack and send cutome payloads and more.
•	Hydra and john the ripper – to perform attacks like bruteforce and fuzzing with custome word list
•	Wfuzz – this a fuzzing tool used to discover overflow and bad charaters
•	Post man – to attack apis manually
•	arjun – api parameter dicovery tool this is used to discover the api parms and custom api calls
•	BeEF – used test browser side attacks https://github.com/beefproject/beef/wiki
•	foxyProxy – to switch proxy quickly from attack to user
•	Cookie editor+ - cookie editor
•	python – write scripts.
•	Cyberchef – to encode and decode the data for custom cryptography attacks

Documentation:

•	libre office – open source office distro for document editing

the binary and code scanning tools document                                other reference document



