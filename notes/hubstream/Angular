Type Script -

    What is Type Script ? 

        TypeScript is a free and open-source high-level programming language developed by Microsoft that adds static typing with optional type annotations to JavaScript. It is designed for the development of large applications and transpiles to JavaScript.

    the Type script is also a Super set of js means js + more functions

features of type script -

    - static checker - this is used to debug the code while typing 
    - every code is converted in to js then compiled

Steps to install the angular -

    first install the node 
    then install and update the npm
    then install angular cli using this command 
        npm install -g @angular/cli
    then create a directory for the new app
    cmd is 
        ng new "application name without quotes use _ or - no avoid space and do avoid the word 'test' "
    depending on the angular version you are using you will be asked some default questions
    like do u like to add angular routing (y/n)
    or the css versions 

    press enter for the both questions to select the default

    angular uses the type script
    then use cd cmd to go inside the angular folder
    then run the develpement server
        ng serve
    the server is running in local host 4200

this is almost similar to the react but some new keywords and different internal working

CLI Deep Dive & Troubleshooting
In the next lecture, we're going to build our first little app!

If the CLI prompts you to answer some questions (some versions do that), you can simply hit ENTER for all questions. This will accept the default settings which are fine for this course.

The CLI generates a different welcome screen than you're going to see in my video though. No worries, you'll still be able to follow along without issues! Just make sure to code along so that your code equals mine - Angular itself didn't change a bit :)

-----

If you want to dive deeper into the CLI and learn more about its usage, have a look at its official documentation: https://github.com/angular/angular-cli/wiki

You encountered issues during the installation of the CLI or setup of a new Angular project?

A lot of problems are solved by making sure you're using the latest version of NodeJS, npm and the CLI itself.

Updating NodeJS:

Go to nodejs.org and download the latest version - uninstall (all) installed versions on your machine first.

Updating npm:

Run [sudo] npm install -g npm  (sudo  is only required on Mac/ Linux)

Updating the CLI

[sudo] npm uninstall -g angular-cli @angular/cli 

npm cache verify 

[sudo] npm install -g @angular/cli 

Here are some common issues & solutions:

Creation of a new project takes forever (longer than 3 minutes)
That happens on Windows from time to time => Try running the command line as administrator

You get an EADDR error (Address already in use)
You might already have another ng serve process running - make sure to quit that or use ng serve --port ANOTHERPORT  to serve your project on a new port

My changes are not reflected in the browser (App is not compiling)
Check if the window running ng serve  displays an error. If that's not the case, make sure you're using the latest CLI version and try restarting your CLI
    

angular strict mode 

    this is a mode used while creating the app the strict mode
    Angular CLI creates all new workspaces and projects with strict mode enabled. Strict mode improves maintainability and helps you catch bugs ahead of time.

    TO CREATE A APP IN THE STRICT MODE 
        ng new "app name without quotes" --strict  

    more on strict mode - https://angular.io/guide/strict-mode

    if u dont want the strict mode then specify as --no-strict
        ng new "app name without quotes" --no-strict  

same like react the angular also displays an empty page on the error occurance

to use a particular module in the angular u need to download it using npm command then import it in the app.module.ts to use it in the main script or the html then u need to edit the imports section in the app.module.ts

    eg let me use a module called FormsModule

        for this module it is already installed with the angular cli so we are going to import it directly

    inside the app.module.ts

        import { NgModule } from '@angular/core';
        import { BrowserModule } from '@angular/platform-browser';
        import { FormsModule } from '@angular/forms';

        import { AppComponent } from './app.component';

        @NgModule({
          declarations: [
            AppComponent
          ],
          imports: [
            BrowserModule,
            FormsModule
          ],
          providers: [],
          bootstrap: [AppComponent]
        })
        export class AppModule { }

    as u can see we have added 2 new lines 

    1.
        import { FormsModule } from '@angular/forms';

    2.    
        imports: [
            BrowserModule,
            FormsModule
          ],

this was a module for ngModel that is used to get the input and change the variable dynamically
    
    then we also modified the html and app.component.ts
        app.component.ts

        import { Component } from '@angular/core';

        @Component({
          selector: 'app-root',
          templateUrl: './app.component.html',
          styleUrls: ['./app.component.css']
        })
        export class AppComponent {
          name = 'new_app';
        }
        
        app.component.html

        <input type="text" [(ngModel)]="name">
        <p>{{ name }}</p>

the above program is noting but it makes the input value to render in the html page using NgModule

this is not the full content so dont forget to google stuff and read DOMRectList

so angular uses type script that is converted in to js at the end

you can install the bootstrap for beatuful Ui in ur web application

    npm i --save bootstrap@version

    eg:
        npm i --save bootstrap  // this installs the latest version
        (or)
        npm i --save bootstrap@3  //this installs the version 3

then the node should know that we have another css file that is bootstrap so u need to add a line under angular.json under -> architect -> build -> test -> styles
here we need to add the location of out bootstrap css file whic is located in C:\Users\[Your user name]\[your app location and name]\node_modules\bootstrap\dist\css\bootstrap-theme.min.css

        after modification :

            "styles": [
                "node_modules/bootstrap/dist/css/bootstrap-theme.min.css",
                "src/styles.css"
            ],

                note : change '\' -> '/' in the copied path and the copied path should started from node_modules
                try not to use the bootstrap from the global installation else it will be confusing
                do restart the server so that the new config is loaded



use developers tools and check the sources tab and then click on style.css if it displayed message like 

Do you get some strange error? Are you stuck? 

Have a look at the source code of this course - by comparing it to your code you should be able to quickly find out where your code deviates and what causes the issue!

You can find the source code of each section attached to the last lecture of that section!

Each ZIP file holds code files which you can use to compare your code to it.

One important note: All the course code will only work if you are NOT using "strict mode" see the "First App" lecture in this module. Strict mode forces you to write more verbose code in some places (especially when it comes to class properties). If you enabled it by accident, you can also disable it by setting strict: false in your tsconfig.json file.

---

Due to dependency version mismatches, running the attachments might fail though - in that case, you can try the following:

1) Create a new project via ng new my-project --strict false (the --strict false part is important!)

2) Copy the content of the ZIP attachment src/app folder into the newly created project src/app folder.

3) Run your project (my-project) via ng serve

If you try to directly run my ZIP attachments, you must run npm install first.

If you're getting errors when running npm install, you can often solve them by running npm install --legacy-peer-deps instead of npm install.

---

Got any problems with the code (e.g. error messages when running it or you don't know how to use it)? Check this thread created by Jost: https://www.udemy.com/the-complete-guide-to-angular-2/learn/lecture/6709112#questions/8079942

! Still it does not work its ok u can contine we will see that in future
the root componet is the default componut in the angular it is the palce where all the componunts are tied up

Components -

    these are the parts of the the webpage that have different workings like google web page has a component called search it can be repeded in the multiple pages

    u can create the components any where but do do ccreate it under the app folder so that its easy to rember and MediaKeySystemAccess

    u need to include the files which u create in the component file then u need to create componets and do add it in the module also



    





















